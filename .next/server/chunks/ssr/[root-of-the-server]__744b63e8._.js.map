{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/db/schema.ts"],"sourcesContent":["import { pgTable, text, timestamp, boolean } from \"drizzle-orm/pg-core\";\n\nexport const user = pgTable(\"user\", {\n    id: text('id').primaryKey(),\n    firstName: text('first_name'),\n    lastName: text('last_name'),\n    email: text('email').notNull().unique(),\n    emailVerified: boolean('email_verified').$defaultFn(() => false).notNull(),\n    image: text('image'),\n    createdAt: timestamp('created_at').$defaultFn(() => /* @__PURE__ */ new Date()).notNull(),\n    updatedAt: timestamp('updated_at').$defaultFn(() => /* @__PURE__ */ new Date()).notNull()\n});\n\nexport const session = pgTable(\"session\", {\n    id: text('id').primaryKey(),\n    expiresAt: timestamp('expires_at').notNull(),\n    token: text('token').notNull().unique(),\n    createdAt: timestamp('created_at').notNull(),\n    updatedAt: timestamp('updated_at').notNull(),\n    ipAddress: text('ip_address'),\n    userAgent: text('user_agent'),\n    userId: text('user_id').notNull().references(() => user.id, { onDelete: 'cascade' })\n});\n\nexport const account = pgTable(\"account\", {\n    id: text('id').primaryKey(),\n    accountId: text('account_id').notNull(),\n    providerId: text('provider_id').notNull(),\n    userId: text('user_id').notNull().references(() => user.id, { onDelete: 'cascade' }),\n    accessToken: text('access_token'),\n    refreshToken: text('refresh_token'),\n    idToken: text('id_token'),\n    accessTokenExpiresAt: timestamp('access_token_expires_at'),\n    refreshTokenExpiresAt: timestamp('refresh_token_expires_at'),\n    scope: text('scope'),\n    password: text('password'),\n    createdAt: timestamp('created_at').notNull(),\n    updatedAt: timestamp('updated_at').notNull()\n});\n\nexport const verification = pgTable(\"verification\", {\n    id: text('id').primaryKey(),\n    identifier: text('identifier').notNull(),\n    value: text('value').notNull(),\n    expiresAt: timestamp('expires_at').notNull(),\n    createdAt: timestamp('created_at').$defaultFn(() => /* @__PURE__ */ new Date()),\n    updatedAt: timestamp('updated_at').$defaultFn(() => /* @__PURE__ */ new Date())\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/db/index.ts"],"sourcesContent":["import { drizzle } from 'drizzle-orm/neon-http';\nimport { neon } from '@neondatabase/serverless';\nimport * as schema from './schema';\n\nconst client = neon(process.env.DATABASE_URL!);\n\nexport const db = drizzle(client, { schema });"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS,CAAA,GAAA,sJAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY;AAErC,MAAM,KAAK,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IAAE,QAAA;AAAO","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/lib/auth.ts"],"sourcesContent":["import { betterAuth } from \"better-auth\";\nimport { drizzleAdapter } from \"better-auth/adapters/drizzle\";\nimport { createAuthMiddleware, customSession } from \"better-auth/plugins\";\nimport { db } from \"@/src/db\";\nimport * as schema from \"@/src/db/schema\"\nimport { eq } from 'drizzle-orm';\n\n\nexport const auth = betterAuth({\n    database: drizzleAdapter(db, {\n        provider: \"pg\",\n        schema: schema\n    }),\n    emailAndPassword: {\n        enabled: true\n    },\n    hooks: {\n        after: createAuthMiddleware(async (ctx) => {\n            if (ctx.path === \"/sign-up/email\") {\n                const newSession = ctx.context.newSession;\n                const body = ctx.body;\n\n                if (!newSession?.user?.id || !body?.metadata) return;\n\n                const { firstName, lastName } = body.metadata;\n\n                await db.update(schema.user)\n                    .set({\n                        firstName,\n                        lastName,\n                    })\n                    .where(eq(schema.user.id, newSession.user.id));\n            }\n        })\n    },\n    plugins: [\n        customSession(async ({ session, user }) => {\n            if (!session?.userId) {\n                return { session, user };\n            }\n\n            // Fetch the user from your database using Drizzle\n            const dbUser = await db.query.user.findFirst({\n                where: eq(schema.user.id, session.userId),\n            });\n\n            // If the user isn't found in the DB, return the default session\n            if (!dbUser) {\n                return { session, user };\n            }\n\n            // Return the session with the user object now containing your database fields\n            return {\n                session,\n                user: {\n                    ...user,\n                    firstName: dbUser.firstName,\n                    lastName: dbUser.lastName,\n                },\n            };\n        }),\n    ],\n});"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAGO,MAAM,OAAO,CAAA,GAAA,gKAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,UAAU,CAAA,GAAA,kLAAA,CAAA,iBAAc,AAAD,EAAE,kHAAA,CAAA,KAAE,EAAE;QACzB,UAAU;QACV,QAAQ;IACZ;IACA,kBAAkB;QACd,SAAS;IACb;IACA,OAAO;QACH,OAAO,CAAA,GAAA,4NAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO;YAC/B,IAAI,IAAI,IAAI,KAAK,kBAAkB;gBAC/B,MAAM,aAAa,IAAI,OAAO,CAAC,UAAU;gBACzC,MAAM,OAAO,IAAI,IAAI;gBAErB,IAAI,CAAC,YAAY,MAAM,MAAM,CAAC,MAAM,UAAU;gBAE9C,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,KAAK,QAAQ;gBAE7C,MAAM,kHAAA,CAAA,KAAE,CAAC,MAAM,CAAC,oHAAO,IAAI,EACtB,GAAG,CAAC;oBACD;oBACA;gBACJ,GACC,KAAK,CAAC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,oHAAO,IAAI,CAAC,EAAE,EAAE,WAAW,IAAI,CAAC,EAAE;YACpD;QACJ;IACJ;IACA,SAAS;QACL,CAAA,GAAA,gLAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;YAClC,IAAI,CAAC,SAAS,QAAQ;gBAClB,OAAO;oBAAE;oBAAS;gBAAK;YAC3B;YAEA,kDAAkD;YAClD,MAAM,SAAS,MAAM,kHAAA,CAAA,KAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;gBACzC,OAAO,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,oHAAO,IAAI,CAAC,EAAE,EAAE,QAAQ,MAAM;YAC5C;YAEA,gEAAgE;YAChE,IAAI,CAAC,QAAQ;gBACT,OAAO;oBAAE;oBAAS;gBAAK;YAC3B;YAEA,8EAA8E;YAC9E,OAAO;gBACH;gBACA,MAAM;oBACF,GAAG,IAAI;oBACP,WAAW,OAAO,SAAS;oBAC3B,UAAU,OAAO,QAAQ;gBAC7B;YACJ;QACJ;KACH;AACL","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/modules/auth/ui/forms/SignInForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/modules/auth/ui/forms/SignInForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/modules/auth/ui/forms/SignInForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/modules/auth/ui/forms/SignInForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/modules/auth/ui/forms/SignInForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/modules/auth/ui/forms/SignInForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/modules/auth/ui/forms/SignUpForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/modules/auth/ui/forms/SignUpForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/modules/auth/ui/forms/SignUpForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/modules/auth/ui/forms/SignUpForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/modules/auth/ui/forms/SignUpForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/modules/auth/ui/forms/SignUpForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/modules/auth/ui/views/authFormView.tsx"],"sourcesContent":["import SignInForm from \"../forms/SignInForm\";\nimport SignUpForm from \"../forms/SignUpForm\";\n\ntype AuthFormType = \"signIn\" | \"signUp\" | \"forgotPassword\" | \"resetPassword\";\n\ninterface AuthFormProps {\n    type: AuthFormType;\n    resetToken?: string;\n}\n\nexport default function AuthForm({ type, resetToken }: AuthFormProps) {\n    // Route according to form type\n    switch (type) {\n        case \"signIn\":\n            return <SignInForm />;\n        case \"signUp\":\n            return <SignUpForm />;\n        case \"forgotPassword\":\n            return <ForgotPasswordForm />;\n        case \"resetPassword\":\n            return <ResetPasswordForm token={resetToken} />;\n        default:\n            return null;\n    }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASe,SAAS,SAAS,EAAE,IAAI,EAAE,UAAU,EAAiB;IAChE,+BAA+B;IAC/B,OAAQ;QACJ,KAAK;YACD,qBAAO,8OAAC,oJAAA,CAAA,UAAU;;;;;QACtB,KAAK;YACD,qBAAO,8OAAC,oJAAA,CAAA,UAAU;;;;;QACtB,KAAK;YACD,qBAAO,8OAAC;;;;;QACZ,KAAK;YACD,qBAAO,8OAAC;gBAAkB,OAAO;;;;;;QACrC;YACI,OAAO;IACf;AACJ","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/app/%28auth%29/sign-in/page.tsx"],"sourcesContent":["import { headers } from \"next/headers\"\nimport { redirect } from \"next/navigation\";\n\nimport { auth } from \"@/src/lib/auth\"\n\nimport AuthForm from \"@/src/modules/auth/ui/views/authFormView\"\n\nconst Page = async () => {\n    const session = await auth.api.getSession({\n        headers: await headers(),\n    });\n\n    if (!!session) {\n        redirect(\"/\");\n    }\n\n    return (\n        <AuthForm type=\"signIn\" />\n    );\n}\n\nexport default Page"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAEA;AAEA;;;;;;AAEA,MAAM,OAAO;IACT,MAAM,UAAU,MAAM,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,UAAU,CAAC;QACtC,SAAS,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACzB;IAEA,IAAI,CAAC,CAAC,SAAS;QACX,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACb;IAEA,qBACI,8OAAC,sJAAA,CAAA,UAAQ;QAAC,MAAK;;;;;;AAEvB;uCAEe","debugId":null}}]
}