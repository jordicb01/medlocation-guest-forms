{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/db/schema.ts"],"sourcesContent":["import {\n    pgTable,\n    text,\n    timestamp,\n    boolean,\n    integer,\n    uuid\n} from \"drizzle-orm/pg-core\";\n\n/* ──────────────────────────────────────────────\n   AUTH (Better-Auth defaults – unchanged)\n   ────────────────────────────────────────────── */\n\nexport const user = pgTable(\"user\", {\n    id: text(\"id\").primaryKey(),\n    firstName: text(\"first_name\"),\n    lastName: text(\"last_name\"),\n    email: text(\"email\").notNull().unique(),\n    emailVerified: boolean(\"email_verified\").$defaultFn(() => false).notNull(),\n    image: text(\"image\"),\n    createdAt: timestamp(\"created_at\").$defaultFn(() => new Date()).notNull(),\n    updatedAt: timestamp(\"updated_at\").$defaultFn(() => new Date()).notNull()\n});\n\nexport const session = pgTable(\"session\", {\n    id: text(\"id\").primaryKey(),\n    expiresAt: timestamp(\"expires_at\").notNull(),\n    token: text(\"token\").notNull().unique(),\n    createdAt: timestamp(\"created_at\").notNull(),\n    updatedAt: timestamp(\"updated_at\").notNull(),\n    ipAddress: text(\"ip_address\"),\n    userAgent: text(\"user_agent\"),\n    userId: text(\"user_id\")\n        .notNull()\n        .references(() => user.id, { onDelete: \"cascade\" })\n});\n\nexport const account = pgTable(\"account\", {\n    id: text(\"id\").primaryKey(),\n    accountId: text(\"account_id\").notNull(),\n    providerId: text(\"provider_id\").notNull(),\n    userId: text(\"user_id\")\n        .notNull()\n        .references(() => user.id, { onDelete: \"cascade\" }),\n    accessToken: text(\"access_token\"),\n    refreshToken: text(\"refresh_token\"),\n    idToken: text(\"id_token\"),\n    accessTokenExpiresAt: timestamp(\"access_token_expires_at\"),\n    refreshTokenExpiresAt: timestamp(\"refresh_token_expires_at\"),\n    scope: text(\"scope\"),\n    password: text(\"password\"),\n    createdAt: timestamp(\"created_at\").notNull(),\n    updatedAt: timestamp(\"updated_at\").notNull()\n});\n\n/* ──────────────────────────────────────────────\n   ORGANIZATION / MULTI-USER\n   ────────────────────────────────────────────── */\n\nexport const company = pgTable(\"company\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    name: text(\"name\").notNull(),\n    createdAt: timestamp(\"created_at\").defaultNow(),\n    updatedAt: timestamp(\"updated_at\").defaultNow()\n});\n\nexport const companyMember = pgTable(\"company_member\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    companyId: uuid(\"company_id\")\n        .notNull()\n        .references(() => company.id, { onDelete: \"cascade\" }),\n    userId: text(\"user_id\")\n        .notNull()\n        .references(() => user.id, { onDelete: \"cascade\" }),\n    role: text(\"role\").default(\"member\"), // owner, admin, member\n    invitedAt: timestamp(\"invited_at\").defaultNow(),\n    joinedAt: timestamp(\"joined_at\")\n});\n\n/* ──────────────────────────────────────────────\n   STRIPE BILLING\n   ────────────────────────────────────────────── */\n\nexport const plan = pgTable(\"plan\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    name: text(\"name\").notNull(),                      // Starter, Pro...\n    description: text(\"description\"),\n    priceMonthly: integer(\"price_monthly\").notNull(),  // cents\n    priceYearly: integer(\"price_yearly\").notNull(),\n    stripePriceIdMonthly: text(\"stripe_price_id_monthly\").notNull(),\n    stripePriceIdYearly: text(\"stripe_price_id_yearly\").notNull(),\n    createdAt: timestamp(\"created_at\").defaultNow()\n});\n\nexport const subscription = pgTable(\"subscription\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    companyId: uuid(\"company_id\")\n        .notNull()\n        .references(() => company.id, { onDelete: \"cascade\" }),\n    planId: uuid(\"plan_id\").references(() => plan.id),\n    stripeCustomerId: text(\"stripe_customer_id\").notNull(),\n    stripeSubscriptionId: text(\"stripe_subscription_id\").notNull(),\n    status: text(\"status\").notNull().default(\"active\"), // active, canceled, past_due\n    currentPeriodStart: timestamp(\"current_period_start\"),\n    currentPeriodEnd: timestamp(\"current_period_end\"),\n    cancelAtPeriodEnd: boolean(\"cancel_at_period_end\").default(false),\n    createdAt: timestamp(\"created_at\").defaultNow(),\n    updatedAt: timestamp(\"updated_at\").defaultNow()\n});\n\n/* ──────────────────────────────────────────────\n   PMS CORE\n   ────────────────────────────────────────────── */\n\nexport const property = pgTable(\"property\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    companyId: uuid(\"company_id\")\n        .notNull()\n        .references(() => company.id, { onDelete: \"cascade\" }),\n    name: text(\"name\").notNull(),\n    address: text(\"address\"),\n    mossosCode: text(\"mossos_code\"),                  // Mossos establishment code\n    createdAt: timestamp(\"created_at\").defaultNow(),\n    updatedAt: timestamp(\"updated_at\").defaultNow()\n});\n\nexport const icalLink = pgTable(\"ical_link\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    propertyId: uuid(\"property_id\")\n        .notNull()\n        .references(() => property.id, { onDelete: \"cascade\" }),\n    url: text(\"url\").notNull(),\n    createdAt: timestamp(\"created_at\").defaultNow()\n});\n\n/* ──────────────────────────────────────────────\n   BOOKINGS & GUESTS\n   ────────────────────────────────────────────── */\n\nexport const booking = pgTable(\"booking\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    propertyId: uuid(\"property_id\")\n        .notNull()\n        .references(() => property.id, { onDelete: \"cascade\" }),\n    startDate: timestamp(\"start_date\").notNull(),\n    endDate: timestamp(\"end_date\").notNull(),\n    source: text(\"source\"),                           // airbnb, manual, etc.\n    contactPhone: text(\"contact_phone\").notNull(),\n    contactEmail: text(\"contact_email\").notNull(),\n    contactAddress: text(\"contact_address\").notNull(),\n    createdAt: timestamp(\"created_at\").defaultNow(),\n    updatedAt: timestamp(\"updated_at\").defaultNow()\n});\n\nexport const guest = pgTable(\"guest\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    bookingId: uuid(\"booking_id\")\n        .notNull()\n        .references(() => booking.id, { onDelete: \"cascade\" }),\n    firstName: text(\"first_name\").notNull(),\n    lastName: text(\"last_name\").notNull(),\n    nationality: text(\"nationality\"),\n    documentType: text(\"document_type\"),              // passport, DNI…\n    documentNumber: text(\"document_number\"),\n    dateOfBirth: timestamp(\"date_of_birth\"),\n    createdAt: timestamp(\"created_at\").defaultNow()\n});\n\n/* ──────────────────────────────────────────────\n   MOSSOS SUBMISSIONS\n   ────────────────────────────────────────────── */\n\nexport const mossosSubmission = pgTable(\"mossos_submission\", {\n    id: uuid(\"id\").defaultRandom().primaryKey(),\n    bookingId: uuid(\"booking_id\")\n        .notNull()\n        .references(() => booking.id, { onDelete: \"cascade\" }),\n    submittedAt: timestamp(\"submitted_at\"),\n    status: text(\"status\").default(\"pending\"),        // pending, success, failed\n    confirmationNumber: text(\"confirmation_number\"),\n    receiptUrl: text(\"receipt_url\"),                 // link to PDF/screenshot\n    createdAt: timestamp(\"created_at\").defaultNow()\n});\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/db/index.ts"],"sourcesContent":["import { drizzle } from 'drizzle-orm/neon-http';\nimport { neon } from '@neondatabase/serverless';\nimport * as schema from './schema';\n\nconst client = neon(process.env.DATABASE_URL!);\n\nexport const db = drizzle(client, { schema });"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS,CAAA,GAAA,wJAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY;AAErC,MAAM,KAAK,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IAAE,QAAA;AAAO","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/lib/auth.ts"],"sourcesContent":["import { betterAuth } from \"better-auth\";\nimport { drizzleAdapter } from \"better-auth/adapters/drizzle\";\nimport { createAuthMiddleware, customSession } from \"better-auth/plugins\";\nimport { db } from \"@/src/db\";\nimport * as schema from \"@/src/db/schema\"\nimport { eq } from 'drizzle-orm';\n\n\nexport const auth = betterAuth({\n    database: drizzleAdapter(db, {\n        provider: \"pg\",\n        schema: schema\n    }),\n    emailAndPassword: {\n        enabled: true\n    },\n    hooks: {\n        after: createAuthMiddleware(async (ctx) => {\n            if (ctx.path === \"/sign-up/email\") {\n                const newSession = ctx.context.newSession;\n                const body = ctx.body;\n\n                if (!newSession?.user?.id || !body?.metadata) return;\n\n                const { firstName, lastName } = body.metadata;\n\n                await db.update(schema.user)\n                    .set({\n                        firstName,\n                        lastName,\n                    })\n                    .where(eq(schema.user.id, newSession.user.id));\n            }\n        })\n    },\n    plugins: [\n        customSession(async ({ session, user }) => {\n            if (!session?.userId) {\n                return { session, user };\n            }\n\n            // Fetch the user from your database using Drizzle\n            const dbUser = await db.query.user.findFirst({\n                where: eq(schema.user.id, session.userId),\n            });\n\n            // If the user isn't found in the DB, return the default session\n            if (!dbUser) {\n                return { session, user };\n            }\n\n            // Return the session with the user object now containing your database fields\n            return {\n                session,\n                user: {\n                    ...user,\n                    firstName: dbUser.firstName,\n                    lastName: dbUser.lastName,\n                },\n            };\n        }),\n    ],\n});"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAGO,MAAM,OAAO,CAAA,GAAA,kKAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,UAAU,CAAA,GAAA,oLAAA,CAAA,iBAAc,AAAD,EAAE,oHAAA,CAAA,KAAE,EAAE;QACzB,UAAU;QACV,QAAQ;IACZ;IACA,kBAAkB;QACd,SAAS;IACb;IACA,OAAO;QACH,OAAO,CAAA,GAAA,8NAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO;YAC/B,IAAI,IAAI,IAAI,KAAK,kBAAkB;gBAC/B,MAAM,aAAa,IAAI,OAAO,CAAC,UAAU;gBACzC,MAAM,OAAO,IAAI,IAAI;gBAErB,IAAI,CAAC,YAAY,MAAM,MAAM,CAAC,MAAM,UAAU;gBAE9C,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,KAAK,QAAQ;gBAE7C,MAAM,oHAAA,CAAA,KAAE,CAAC,MAAM,CAAC,sHAAO,IAAI,EACtB,GAAG,CAAC;oBACD;oBACA;gBACJ,GACC,KAAK,CAAC,CAAA,GAAA,oKAAA,CAAA,KAAE,AAAD,EAAE,sHAAO,IAAI,CAAC,EAAE,EAAE,WAAW,IAAI,CAAC,EAAE;YACpD;QACJ;IACJ;IACA,SAAS;QACL,CAAA,GAAA,kLAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;YAClC,IAAI,CAAC,SAAS,QAAQ;gBAClB,OAAO;oBAAE;oBAAS;gBAAK;YAC3B;YAEA,kDAAkD;YAClD,MAAM,SAAS,MAAM,oHAAA,CAAA,KAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;gBACzC,OAAO,CAAA,GAAA,oKAAA,CAAA,KAAE,AAAD,EAAE,sHAAO,IAAI,CAAC,EAAE,EAAE,QAAQ,MAAM;YAC5C;YAEA,gEAAgE;YAChE,IAAI,CAAC,QAAQ;gBACT,OAAO;oBAAE;oBAAS;gBAAK;YAC3B;YAEA,8EAA8E;YAC9E,OAAO;gBACH;gBACA,MAAM;oBACF,GAAG,IAAI;oBACP,WAAW,OAAO,SAAS;oBAC3B,UAAU,OAAO,QAAQ;gBAC7B;YACJ;QACJ;KACH;AACL","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///Users/jordi/Desktop/PRJCTS/NextJS%20Apps/medlocation-guest-forms/src/app/api/auth/%5B...all%5D/route.ts"],"sourcesContent":["import { auth } from \"@/src/lib/auth\";\nimport { toNextJsHandler } from \"better-auth/next-js\";\n\nexport const { POST, GET } = toNextJsHandler(auth);"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,uKAAA,CAAA,kBAAe,AAAD,EAAE,oHAAA,CAAA,OAAI","debugId":null}}]
}